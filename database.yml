AWSTemplateFormatVersion: 2010-09-09
Description: A db stack that creates serverless RDS within 2 private subnets

Parameters:
  NetworkStackName:
    Type: String
    Description: Name of VPC stack to build off of

  DBName:
    Type: String
    Description: The name of the database that is created within the MySQL instance.

  DBUsername:
    Type: String
    Description: The master user name for the MySQL instance.
    Default: admin

Resources:
  Credentials:
    DeletionPolicy: Retain
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "', !Ref 'DBUsername' ,'"}']]
        GenerateStringKey: "password"
        PasswordLength: 32
        ExcludeCharacters: '"@/\'

  ClusterSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Default subnet group
      SubnetIds:
        -
          Fn::ImportValue: !Join [':', [!Ref 'NetworkStackName', 'PrivateSubnetOne']]
        -
          Fn::ImportValue: !Join [':', [!Ref 'NetworkStackName', 'PrivateSubnetTwo']]

  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow access frp, ECS containers to RDS instances
        VpcId:
          Fn::ImportValue: !Join [':', [!Ref 'NetworkStackName', 'VPCId']]
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  Cluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DatabaseName: !Ref DBName
      DBSubnetGroupName: !Ref ClusterSubnetGroup
      Engine: aurora
      EngineMode: serverless
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref Credentials, ':SecretString:username}}']]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref Credentials, ':SecretString:password}}']]
      ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 128
          MinCapacity: 1
          SecondsUntilAutoPause: 3000
      VpcSecurityGroupIds:
        - !Ref ClusterSecurityGroup

  CredentialsTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref Credentials
      TargetId: !Ref Cluster
      TargetType: AWS::RDS::DBCluster

Outputs:
  SecretArn:
    Description: ARN for the DB's secret
    Value: !Ref Credentials
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'Secret' ] ]
  EndpointAddress:
    Description: Address of the RDS Cluster endpoint.
    Value: !GetAtt 'Cluster.Endpoint.Address'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointAddress' ] ]
  EndpointPort:
    Description: Port of the RDS Cluster endpoint.
    Value: !GetAtt 'Cluster.Endpoint.Port'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointPort' ] ]
  DBName:
    Description: The name of the database that is created within the PostgreSQL instance.
    Value: !Ref DBName
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'DBName' ] ]
